{"ast":null,"code":"var _jsxFileName = \"/home/brice/Documents/instagram-clone-app/instagram-clone/src/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { storage, db } from './firebase';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload({\n  username\n}) {\n  _s();\n\n  const [caption, setCaption] = useState(\"\"); // const [url, setUrl] = useState(\"\")\n\n  const [progress, setProgress] = useState(0);\n  const [image, setImage] = useState(\"\");\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`.put(image));\n    uploadTask.on(\"state_changed\", snapshot => {\n      // progress logic...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      // Error function\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // Complete function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        // Post the image inside the database\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"imageupload__progress\",\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a caption...\",\n      onChange: event => setCaption(event.target.value),\n      value: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"imageupload__button\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUpload, \"ZOZZtGjOowMeXqUILd3sz+MrZ3E=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/brice/Documents/instagram-clone-app/instagram-clone/src/ImageUpload.js"],"names":["React","useState","Button","storage","db","firebase","ImageUpload","username","caption","setCaption","progress","setProgress","image","setImage","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","handleChange","e","target","files","event","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@material-ui/core'\nimport {storage, db} from './firebase'\nimport firebase from 'firebase';\n\n\nfunction ImageUpload({username}) {\n    const [caption, setCaption] = useState(\"\")\n    // const [url, setUrl] = useState(\"\")\n    const [progress, setProgress] = useState(0)\n    const [image, setImage] = useState(\"\")\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${image.name}`.put(image))\n\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                // progress logic...\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n\n                setProgress(progress)\n            }, \n            (error) => {\n                // Error function\n                console.log(error)\n                alert(error.message)\n            },\n            () => {\n                // Complete function ...\n                storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()\n                .then(url =>{\n                    // Post the image inside the database\n                    db.collection(\"posts\")\n                    .add({\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                        caption: caption,\n                        imageUrl: url,\n                        username: username,\n                    })\n\n                    setProgress(0);\n                    setCaption(\"\")\n                    setImage(null)\n\n\n                })\n            }\n            )\n    }\n\n    const handleChange = (e) => {\n        if(e.target.files[0]) {\n            setImage(e.target.files[0])\n        }\n    }\n\n    return (        \n        <div>\n            {/* I want to have ./..... */}\n            {/* Caption input */}\n            {/* File picker */}\n            {/* Post button */}\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\n            <input type=\"text\"\n            placeholder=\"Enter a caption...\" onChange={event => setCaption(event.target.value)} value={caption} />\n            <input type=\"file\" onChange={handleChange} />\n            <Button className=\"imageupload__button\" onClick={handleUpload}>\n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n"]},"metadata":{},"sourceType":"module"}